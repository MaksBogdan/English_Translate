{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/English_Translate/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      word: '',\n      translate: '',\n      cards: []\n    };\n  }\n\n  updateInput(key, value) {\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addCard() {\n    const newCard = {\n      id: 1 + this.state.id,\n      value: {\n        word: this.state.word.slice(),\n        translate: this.state.translate.slice(),\n        overtured: false\n      }\n    };\n    this.setState({\n      id: newCard.id,\n      word: '',\n      translate: '',\n      cards: [...this.state.cards, newCard]\n    });\n  }\n\n  turnCard(id) {\n    const cards = [...this.state.cards];\n    let index = cards.findIndex(cards => {\n      return cards.id === id;\n    });\n    cards[index].value.overtured = !cards[index].value.overtured;\n    this.updateInput('cards', cards);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"appTitle\",\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438 \\u0430\\u043D\\u0433\\u043B\\u0438\\u0439\\u0441\\u043A\\u0438\\u0445 \\u0441\\u043B\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E\",\n          value: this.state.word,\n          onChange: e => this.updateInput('word', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E\",\n          value: this.state.translate,\n          onChange: e => this.updateInput('translate', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addWord\",\n          onClick: () => this.addCard(),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.cards.map(card => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'card' + (card.value.overtured ? 'overtured' : ''),\n              onClick: () => this.turnCard(card.id),\n              children: card.value.overtured ? card.value.translate : card.value.word\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/English_Translate/src/App.js"],"names":["React","App","Component","constructor","props","state","id","word","translate","cards","updateInput","key","value","setState","addCard","newCard","slice","overtured","turnCard","index","findIndex","render","e","target","map","card"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      id: 0,\n      word: '',\n      translate: '',\n      cards: [],\n    }\n  }\n  updateInput(key, value){\n    this.setState({\n      [key] : value\n    })\n  };\n\n addCard () {\n   const newCard = {\n     id: 1 + this.state.id, \n     value : {\n        word: this.state.word.slice(),\n        translate: this.state.translate.slice(),\n        overtured: false,\n     }\n   };\n   this.setState ({\n    id: newCard.id,\n    word: '',\n    translate: '',\n    cards: [...this.state.cards,newCard]\n  })\n};\n\nturnCard(id) {\n  const cards = [...this.state.cards];\n\n  let index = cards.findIndex((cards) => {\n    return cards.id === id\n  });\n  cards[index].value.overtured = !cards[index].value.overtured;\n  this.updateInput('cards', cards);\n}\n\n  render (){\n    return (\n      <div className=\"App\">\n        <h1 className = 'appTitle'>Карточки английских слов</h1>\n        <div className = 'container' >\n          Добавить карточку...<br/>\n          <input \n          type = 'text' \n          placeholder = 'Введите слово'\n          value = {this.state.word}\n          onChange = {(e) => this.updateInput('word', e.target.value)}\n          />\n          <input \n          type = 'text' \n          placeholder = 'Введите слово'\n          value = {this.state.translate}\n          onChange = {(e) => this.updateInput('translate', e.target.value)}\n          />\n          <button \n          className = 'addWord'\n          onClick = {() => this.addCard()} \n          >\n            Добавить\n          </button>\n          <div>\n            {this.state.cards.map(card => {\n              return(\n                <div \n                key = {card.id}\n                className = {'card'+ (card.value.overtured ? 'overtured' : '')}\n                onClick = {() => this.turnCard(card.id)}\n                >\n                  {card.value.overtured ? card.value.translate : card.value.word}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n   \n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}